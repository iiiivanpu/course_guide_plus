{"version":3,"sources":["static/logo.png","reducers/mainUi.js","components/serach-bar.js","components/welcome-page.js","components/App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","INITIAL_STATE","selectedClass","mainUiReducer","state","arguments","length","undefined","action","type","console","log","className","Object","objectSpread","ListItem","withStyle","StyledDropdownListItem","paddingTop","paddingBottom","display","alignItems","Container","StyledList","height","VirtualList","React","forwardRef","props","ref","children","Children","toArray","react_default","a","createElement","AutoSizer_default","_ref","width","List_default","role","rowCount","rowHeight","rowRenderer","_ref2","index","key","style","assign","item","id","newAllCourseNames","require","name_list","sort","reduce","memo","name","push","SearchBar","_this","this","baseui_select","options","labelKey","overrides","Dropdown","component","onChange","event","selectAClass","option","placeholder","TYPE","search","maxDropdownHeight","Component","connect","dispatch","WelcomePageContainer","styled","justifyContent","flexDirection","LogoContainer","marginBottom","SearchBarContainer","position","WelcomePage","src","Logo","alt","serach_bar","App","Home","About","react_router_dom","to","react_router","exact","path","Boolean","window","location","hostname","match","engine","Styletron","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","browser_es5_es","value","debug","debugAfterHydration","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f109ae4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.314b5011.png\";","const INITIAL_STATE = {\n  selectedClass: null\n};\n\nexport const selectAClass = className => ({\n  type: \"SELECT_A_CLASS\",\n  className\n});\n\nconst mainUiReducer = (state = INITIAL_STATE, action) => {\n  // let newState;\n  switch (action.type) {\n    case \"SELECT_A_CLASS\":\n      console.log(\"select a class: \", action.className);\n      return {\n        ...state,\n        selectedClass: action.className\n      };\n    default:\n      return state;\n  }\n};\n\nexport default mainUiReducer;\n","import React from \"react\";\nimport { withStyle } from \"baseui\";\nimport { StatefulSelect, StyledDropdownListItem, TYPE } from \"baseui/select\";\nimport { StyledList } from \"baseui/menu\";\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport { connect } from \"react-redux\";\nimport { selectAClass } from \"../reducers/mainUi\";\n\nconst ListItem = withStyle(StyledDropdownListItem, {\n  paddingTop: 0,\n  paddingBottom: 0,\n  display: \"flex\",\n  alignItems: \"center\"\n});\nconst Container = withStyle(StyledList, { height: \"300px\" });\nconst VirtualList = React.forwardRef((props, ref) => {\n  const children = React.Children.toArray(props.children);\n  return (\n    <Container ref={ref}>\n      <AutoSizer>\n        {({ width }) => (\n          <List\n            role={props.role}\n            height={500}\n            width={width}\n            rowCount={props.children.length}\n            rowHeight={36}\n            rowRenderer={({ index, key, style }) => {\n              return (\n                <ListItem key={key} style={style} {...children[index].props}>\n                  {children[index].props.item.id}\n                </ListItem>\n              );\n            }}\n          />\n        )}\n      </AutoSizer>\n    </Container>\n  );\n});\nconst json = require(\"../constants/all_course_name_list.json\");\nconst newAllCourseNames = json.name_list.sort().reduce((memo, name) => {\n  memo.push({ id: name });\n  return memo;\n}, []);\nconsole.log(newAllCourseNames);\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n      <StatefulSelect\n        options={newAllCourseNames}\n        labelKey=\"id\"\n        overrides={{\n          Dropdown: {\n            component: VirtualList\n          }\n        }}\n        onChange={event => {\n          console.log(event);\n          if (event.type === \"select\") this.props.selectAClass(event.option.id);\n          else this.props.selectAClass(null);\n        }}\n        placeholder=\"Choose a class...\"\n        type={TYPE.search}\n        maxDropdownHeight=\"200px\"\n      />\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  selectAClass: className => {\n    dispatch(selectAClass(className));\n  }\n});\n\n// Using null in the first argument to replace mapStateToProps\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchBar);\n","import React from \"react\";\r\nimport { styled } from \"baseui\";\r\nimport Logo from \"../static/logo.png\";\r\nimport SearchBar from \"./serach-bar\";\r\n\r\nconst WelcomePageContainer = styled(\"div\", {\r\n  height: \"55vh\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\"\r\n});\r\nconst LogoContainer = styled(\"img\", {\r\n  marginBottom: \"30px\",\r\n  width: \"50%\"\r\n});\r\nconst SearchBarContainer = styled(\"div\", {\r\n  position: \"aboluste\",\r\n  width: \"80%\"\r\n});\r\n\r\nexport default class WelcomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <WelcomePageContainer>\r\n        <LogoContainer src={Logo} alt=\"website logo\" />\r\n        <SearchBarContainer>\r\n          <SearchBar />\r\n        </SearchBarContainer>\r\n      </WelcomePageContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport WelcomePage from \"./welcome-page\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  // function Home() {\n  //   return (\n  // <div>\n  //   <h2>Home</h2>\n  // </div>\n  //   );\n  // }\n\n  Home = () => {\n    return (\n      <div>\n        <h2>Home</h2>\n      </div>\n    );\n  };\n\n  About = () => {\n    return (\n      <div>\n        <h2>About</h2>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/course_info\">About</Link>\n            </li>\n          </ul>\n\n          <hr />\n\n          <Route exact path=\"/\" component={WelcomePage} />\n          <Route path=\"/course_info\" component={this.About} />\n        </div>\n      </Router>\n    );\n    // return (\n    //   <div className=\"app\">\n    //     <WelcomePage />\n    //   </div>\n\n    // );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// Create a redux store\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n      <App />\n    </StyletronProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\";\nimport mainUiReducer from \"../reducers/mainUi\";\n\nexport default function configureStore() {\n  return createStore(\n    mainUiReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n}\n"],"sourceRoot":""}